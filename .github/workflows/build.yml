# name: Build

# on:
#   push:
#     branches: [main]
#     paths-ignore:
#       - "**.md"
#   pull_request:
#     branches: [main]

# env:
#   cmake_configure_args: -D WARNINGS_AS_ERRORS_FOR_MINECRAFT=ON
#   cmakelists_folder: "."
#   cmake_target: Minecraft

# jobs:
#   build-and-run-tests:
#     name: ${{matrix.config.name}} ${{matrix.wgpu_backend}} ${{matrix.build_type}}
#     runs-on: ${{matrix.config.os}}
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {
#               name: Windows MSVC,
#               os: windows-latest,
#               cmake_configure_args: -D CMAKE_C_COMPILER=cl CMAKE_CXX_COMPILER=cl -G Ninja,
#             }
#           - {
#               name: Windows Clang,
#               os: windows-latest,
#               cmake_configure_args: -T ClangCL,
#             }
#         build_type:
#           - Debug
#           - Release
#         wgpu_backend:
#           - DAWN
#           - WGPU

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive

#       - name: Set up MSVC # NOTE: required to find cl.exe when using the Ninja generator. And we need to use Ninja in order for ccache to be able to cache stuff with MSVC.
#         if: matrix.config.name == 'Windows MSVC'
#         uses: ilammy/msvc-dev-cmd@v1.13.0

#       - name: ccache
#         uses: hendrikmuhs/ccache-action@main
#         with:
#           key: ${{matrix.config.name}}-${{matrix.wgpu_backend}}-${{matrix.build_type}}

#       - name: Build
#         uses: lukka/run-cmake@v3
#         with:
#           cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
#           cmakeListsTxtPath: ${{github.workspace}}/${{env.cmakelists_folder}}/CMakeLists.txt
#           cmakeAppendedArgs: ${{env.cmake_configure_args}} -D CMAKE_BUILD_TYPE=${{matrix.build_type}} ${{matrix.config.cmake_configure_args}} -D WEBGPU_BACKEND=${{matrix.wgpu_backend}} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
#           buildWithCMakeArgs: --config ${{matrix.build_type}} --target ${{env.cmake_target}}
#           cmakeBuildType: ${{matrix.build_type}}
#           buildDirectory: ${{github.workspace}}/build
